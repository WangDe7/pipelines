name: CI

on:
  push:
    branches:
      - main
      - dockerBuildTest
    # Publish semver tags as releases.
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ''
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Golang
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Install docker # Taken from https://github.com/actions/virtual-environments/issues/1143#issuecomment-652264388
        run: |
          mkdir -p ~/.docker/machine/cache
          curl -Lo ~/.docker/machine/cache/boot2docker.iso https://github.com/boot2docker/boot2docker/releases/download/v19.03.12/boot2docker.iso
          brew install docker docker-machine
          brew services start docker-machine

#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3

      - name: Build Image
        run: |
          cd backend
          docker build -f Dockerfile.cacheserver -t dave917/cacheserver:1.0 .
#          docker build . --file Dockerfile.cacheserver --tag ${{env.IMAGE_NAME}}

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            # tag event
            type=ref,enable=true,priority=600,prefix=,suffix=,event=tag

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}